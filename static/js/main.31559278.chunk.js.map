{"version":3,"sources":["components/ContactList/ContactList.module.css","components/ContactForm/ContactForm.module.css","components/Filter/Filter.module.css","components/Container/Container.module.css","components/ContactForm/ContactForm.jsx","components/ContactList/ContactListItem.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.jsx","components/Container/Container.jsx","App.js","reportWebVitals.js","index.js"],"names":["module","exports","ContactForm","onSubmit","useState","name","setName","number","setNumber","handleInput","e","currentTarget","value","reset","preventDefault","className","s","form","form__label","form__input","type","pattern","title","required","onChange","form__btn","ContactListItem","id","onDelete","contact__item","contact__text","contact__btn","onClick","ContactList","contacts","contact","map","Filter","onFilter","filter","filter__input","Container","children","container","App","JSON","parse","window","localStorage","getItem","setContacs","setFilter","useEffect","setItem","stringify","uuidv4","find","toLowerCase","alert","prev","console","log","includes","contactId","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.31559278.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"contact\":\"ContactList_contact__MykPS\",\"contact__item\":\"ContactList_contact__item__341NA\",\"contact__text\":\"ContactList_contact__text__J_FEh\",\"contact__btn\":\"ContactList_contact__btn__2cxZ4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__1e5wc\",\"form__label\":\"ContactForm_form__label__18YfF\",\"form__input\":\"ContactForm_form__input__edvnt\",\"form__btn\":\"ContactForm_form__btn__3c1RW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter\":\"Filter_filter__2iw81\",\"filter__input\":\"Filter_filter__input__34PPt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__3pvQ1\"};","// import { Component } from \"react\";\r\nimport React, { useState } from \"react\";\r\nimport s from \"../ContactForm/ContactForm.module.css\";\r\n\r\nfunction ContactForm({ onSubmit }) {\r\n  const [name, setName] = useState(\"\");\r\n  const [number, setNumber] = useState(\"\");\r\n\r\n  const handleInput = (e) => {\r\n    const { name, value } = e.currentTarget;\r\n    switch (name) {\r\n      case \"name\":\r\n        setName(value);\r\n        break;\r\n      case \"number\":\r\n        setNumber(value);\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    onSubmit(name, number);\r\n    reset();\r\n  };\r\n\r\n  const reset = () => {\r\n    setName(\"\");\r\n    setNumber(\"\");\r\n  };\r\n  return (\r\n    <form onSubmit={handleSubmit} className={s.form}>\r\n      <label className={s.form__label}>\r\n        Name\r\n        <input\r\n          className={s.form__input}\r\n          type=\"text\"\r\n          name=\"name\"\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n          required\r\n          value={name}\r\n          onChange={handleInput}\r\n        />\r\n      </label>\r\n      <label className={s.form__label}>\r\n        Number\r\n        <input\r\n          className={s.form__input}\r\n          type=\"tel\"\r\n          name=\"number\"\r\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n          required\r\n          value={number}\r\n          onChange={handleInput}\r\n        />\r\n      </label>\r\n      <button className={s.form__btn} type=\"submit\">\r\n        Add Contact\r\n      </button>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default ContactForm;\r\n\r\n// class ContactForm extends Component {\r\n//   state = {\r\n//     name: \"\",\r\n//     number: \"\",\r\n//   };\r\n\r\n//   handleInput = (e) => {\r\n//     const { name, value } = e.currentTarget;\r\n//     this.setState({ [name]: value });\r\n//   };\r\n\r\n//   handleSubmit = (e) => {\r\n//     e.preventDefault();\r\n//     this.props.onSubmit(this.state);\r\n//     this.reset();\r\n//   };\r\n\r\n//   reset = () => this.setState({ name: \"\", number: \"\" });\r\n\r\n//   render() {\r\n//     const { name, number } = this.state;\r\n//     return (\r\n//       <form className={s.form} onSubmit={this.handleSubmit}>\r\n//         <label className={s.form__label}>\r\n//           Name\r\n//           <input\r\n//             className={s.form__input}\r\n//             type=\"text\"\r\n//             name=\"name\"\r\n//             pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n//             title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n//             required\r\n//             value={name}\r\n//             onChange={this.handleInput}\r\n//           />\r\n//         </label>\r\n//         <label className={s.form__label}>\r\n//           Number\r\n//           <input\r\n//             className={s.form__input}\r\n//             type=\"tel\"\r\n//             name=\"number\"\r\n//             pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n//             title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n//             required\r\n//             value={number}\r\n//             onChange={this.handleInput}\r\n//           />\r\n//         </label>\r\n//         <button className={s.form__btn} type=\"submit\">\r\n//           Add Contact\r\n//         </button>\r\n//       </form>\r\n//     );\r\n//   }\r\n// }\r\n// export default ContactForm;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport s from \"../ContactList/ContactList.module.css\";\r\n\r\nexport default function ContactListItem({ id, name, number, onDelete }) {\r\n  return (\r\n    <li key={id} className={s.contact__item}>\r\n      <div>\r\n        <span className={s.contact__text}>{name}: </span>\r\n        <span className={s.contact__text}>{number}</span>\r\n      </div>\r\n      <button\r\n        className={s.contact__btn}\r\n        onClick={() => {\r\n          onDelete(id);\r\n        }}\r\n      >\r\n        Delete\r\n      </button>\r\n    </li>\r\n  );\r\n}\r\n\r\nContactListItem.propTypes = {\r\n  id: PropTypes.string.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  number: PropTypes.string.isRequired,\r\n  onDelete: PropTypes.func.isRequired,\r\n};\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport ContactListItem from \"./ContactListItem\";\r\nimport s from \"../ContactList/ContactList.module.css\";\r\n\r\nexport default function ContactList({ contacts, onDelete }) {\r\n  return (\r\n    <ul className={s.contact}>\r\n      {contacts.map(({ id, name, number }) => (\r\n        <ContactListItem\r\n          key={id}\r\n          id={id}\r\n          name={name}\r\n          number={number}\r\n          onDelete={onDelete}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n}\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      name: PropTypes.string.isRequired,\r\n      number: PropTypes.string.isRequired,\r\n    })\r\n  ),\r\n  onDelete: PropTypes.func.isRequired,\r\n};\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport s from \"../Filter/Filter.module.css\";\r\n\r\nexport default function Filter({ value, onFilter }) {\r\n  return (\r\n    <label className={s.filter}>\r\n      Find contacts by name\r\n      <input\r\n        className={s.filter__input}\r\n        type=\"text\"\r\n        value={value}\r\n        onChange={onFilter}\r\n      />\r\n    </label>\r\n  );\r\n}\r\n\r\nFilter.propTypes = {\r\n  value: PropTypes.string.isRequired,\r\n  onFilter: PropTypes.func.isRequired,\r\n};\r\n","import s from \"../Container/Container.module.css\";\r\n\r\nexport default function Container({ children }) {\r\n  return <div className={s.container}>{children}</div>;\r\n}\r\n","import React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport ContactForm from \"./components/ContactForm\";\nimport ContactList from \"./components/ContactList\";\nimport Filter from \"./components/Filter\";\nimport Container from \"./components/Container\";\n\nimport { v4 as uuidv4 } from \"uuid\";\n\nfunction App() {\n  const [contacts, setContacs] = useState(\n    JSON.parse(window.localStorage.getItem(\"contacts\")) ?? []\n  );\n  const [filter, setFilter] = useState(\"\");\n\n  useEffect(() => {\n    window.localStorage.setItem(\"contacts\", JSON.stringify(contacts));\n  }, [contacts]);\n\n  const addContact = (name, number) => {\n    const contact = {\n      id: uuidv4(),\n      name,\n      number,\n    };\n\n    contacts.find(\n      (contact) => contact.name.toLowerCase() === name.toLowerCase()\n    )\n      ? alert(`${contact.name} is already in contacts`)\n      : setContacs((prev) => [...prev, contact]);\n    console.log(contacts);\n  };\n  const addFilter = (e) => {\n    setFilter(e.currentTarget.value);\n  };\n  const filterList = () => {\n    return contacts.filter((contact) =>\n      contact.name.toLowerCase().includes(filter.toLowerCase())\n    );\n  };\n  const deleteContact = (contactId) => {\n    setContacs(contacts.filter((contact) => contact.id !== contactId));\n  };\n  return (\n    <Container>\n      <h1>Phonebook</h1>\n      <ContactForm onSubmit={addContact} />\n      <h2>Contacts</h2>\n      <Filter value={filter} onFilter={addFilter} />\n      <ContactList contacts={filterList()} onDelete={deleteContact} />\n    </Container>\n  );\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}